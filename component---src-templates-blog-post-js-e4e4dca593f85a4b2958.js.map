{"version":3,"file":"component---src-templates-blog-post-js-e4e4dca593f85a4b2958.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/TableOfContents.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <div>\n          <p>\n            Written by <strong>{author.name}</strong>\n          </p>\n          <p style={{ fontSize: '0.9rem', color: 'var(--color-text-light)', marginTop: '0.25rem' }}>\n            JVM, Java, 성능 최적화 등 개발 이야기를 다루는 기술 블로그\n          </p>\n          {social?.github && (\n            <a \n              href={`https://github.com/${social.github}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ marginTop: '0.5rem', display: 'inline-block' }}\n            >\n              GitHub @{social.github}\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React, { useEffect, useState, memo } from 'react'\nimport styled from 'styled-components'\n\nconst TOCWrapper = styled.div`\n  position: fixed;\n  right: 40px;\n  top: 12vh;\n  width: 200px;\n  height: 70vh;\n  max-height: 600px;\n  border-radius: 12px;\n  overflow: hidden;\n\n  @media (max-width: 1150px) {\n    display: none;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 3px;\n  height: ${props => (props.$progress || 0)}%;\n  max-height: 100%;\n  background: linear-gradient(to bottom, #3b82f6, #1e40af);\n  border-radius: 12px 0 0 12px;\n  transition: height 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1001;\n  pointer-events: none;\n  overflow: hidden;\n  box-shadow: 0 0 8px rgba(59, 130, 246, 0.4);\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 30px;\n    background: linear-gradient(to bottom, rgba(255,255,255,0.3), transparent);\n    animation: shimmer 2s ease-in-out infinite;\n  }\n\n  @keyframes shimmer {\n    0%, 100% { opacity: 0.5; }\n    50% { opacity: 1; }\n  }\n`;\n\nconst TOCContainer = styled.nav`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 1rem;\n  background: linear-gradient(135deg, #ffffff 0%, #fafafa 100%);  /* 은은한 그라데이션 */\n  border-radius: 12px;\n  border: 1px solid #e2e8f0;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  z-index: 1000;\n\n  /* Hide scrollbar but allow scrolling */\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (max-width: 1150px) {\n    display: none;\n  }\n`;\n\n\nconst TOCList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TOCItem = styled.li`\n  margin: 0.1rem -0.5rem;\n  padding: 0.3rem 0.5rem;\n  border-radius: 6px;\n  background: ${props => props.$isActive\n    ? 'rgba(59, 130, 246, 0.06)'  /* 활성 항목 배경 - 파란색 */\n    : 'transparent'};\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: ${props => props.$isActive\n      ? 'rgba(59, 130, 246, 0.1)'  /* 활성 항목 호버시 더 진하게 - 파란색 */\n      : 'rgba(243, 244, 246, 0.5)'};  /* 비활성 항목 호버시 연한 회색 */\n  }\n`;\n\nconst TOCLink = styled.a`\n  display: block;\n  padding-left: ${props => (props.$depth - 2) * 1}rem;\n  color: ${props => {\n    if (props.$isActive) return '#3b82f6';  /* 파란색 */\n    if (props.$isH2) return '#1e293b';  /* 진한 회색 */\n    return '#64748b';  /* 중간 회색 */\n  }};\n  font-size: ${props => props.$isH2 ? '0.85rem' : '0.8rem'};\n  text-decoration: none;\n  font-weight: ${props => {\n    if (props.$isActive) return '600';  /* 활성 항목은 조금 덜 굵게 */\n    if (props.$isH2) return '500';  /* H2도 중간 굵기 */\n    return '400';\n  }};\n  line-height: 1.4;\n  transition: all 0.15s ease;\n  /* position: relative; */\n\n  /* Text wrapping for long titles */\n  word-break: keep-all;\n  overflow-wrap: break-word;\n  white-space: normal;\n  hyphens: auto;\n\n  /* Dot indicator for sub-items */\n  /* &::before {\n    content: ${props => props.$depth > 2 ? '\"•\"' : '\"\"'};\n    position: absolute;\n    left: ${props => 0.75 + (props.$depth - 3) * 0.75}rem;\n    color: ${props => props.$isActive ? '#4338ca' : '#cbd5e1'};\n    font-size: 0.6rem;\n    top: 50%;\n    transform: translateY(-50%);\n  } */\n\n  &:hover {\n    color: ${props => props.$isActive ? '#2563eb' : '#1e293b'};\n    transform: translateX(2px);\n  }\n`;\n\n// Store progress outside React to prevent resets\nlet globalScrollProgress = 0\n\nconst TableOfContents = memo(() => {\n  const [headings, setHeadings] = useState([])\n  const [activeId, setActiveId] = useState('')\n  const [scrollProgress, setScrollProgress] = useState(globalScrollProgress)\n  const tocRef = React.useRef(null)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const contentElement = document.querySelector('.blog-post-content')\n      if (!contentElement) return\n\n      const headingElements = contentElement.querySelectorAll('h2, h3, h4')\n      const collected = []\n\n      headingElements.forEach((heading) => {\n        const text = heading.textContent\n        const depth = parseInt(heading.tagName[1])\n\n        if (!heading.id) {\n          heading.id = text\n            .toLowerCase()\n            .replace(/[^a-z0-9가-힣]+/g, '-')\n            .replace(/(^-|-$)/g, '')\n        }\n\n        collected.push({\n          id: heading.id,\n          text,\n          depth\n        })\n      })\n\n      setHeadings(collected)\n    }, 500)\n\n    return () => clearTimeout(timer)\n  }, [])\n\n  // Separate effect for page scroll progress\n  useEffect(() => {\n    let animationFrame = null\n\n    const handleScrollProgress = () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n\n      animationFrame = requestAnimationFrame(() => {\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n        const docHeight = document.documentElement.scrollHeight\n        const winHeight = window.innerHeight\n        const scrollableHeight = docHeight - winHeight\n\n        if (scrollableHeight > 0) {\n          const progress = Math.min((scrollTop / scrollableHeight) * 100, 100)\n          globalScrollProgress = progress\n          setScrollProgress(progress)\n\n        }\n      })\n    }\n\n    window.addEventListener('scroll', handleScrollProgress, { passive: true })\n    handleScrollProgress() // Initial calculation\n\n    return () => {\n      window.removeEventListener('scroll', handleScrollProgress)\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n    }\n  }, [])\n\n  // Separate effect for active heading tracking\n  useEffect(() => {\n    if (headings.length === 0) return\n\n    const handleScroll = () => {\n      const headingElements = headings\n        .map(({ id }) => document.getElementById(id))\n        .filter(Boolean)\n\n      if (headingElements.length === 0) return\n\n      let currentActiveId = headings[0].id\n\n      // Find the heading currently in viewport\n      for (let i = headingElements.length - 1; i >= 0; i--) {\n        const rect = headingElements[i].getBoundingClientRect()\n        if (rect.top <= 150) {\n          currentActiveId = headingElements[i].id\n          break\n        }\n      }\n\n      setActiveId(currentActiveId)\n    }\n\n    window.addEventListener('scroll', handleScroll, { passive: true })\n    handleScroll()\n\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [headings])\n\n  // Separate effect for auto-scrolling TOC with debounce\n  useEffect(() => {\n    if (!activeId || !tocRef.current) return\n\n    const timeoutId = setTimeout(() => {\n      const activeElement = tocRef.current?.querySelector(`[href=\"#${activeId}\"]`)\n      if (activeElement && tocRef.current) {\n        const container = tocRef.current\n        const elementTop = activeElement.offsetTop\n        const elementHeight = activeElement.offsetHeight\n        const containerHeight = container.clientHeight\n        const containerScrollTop = container.scrollTop\n\n        // Calculate if element is outside visible area\n        const elementBottom = elementTop + elementHeight\n        const visibleTop = containerScrollTop + 20  // Add buffer\n        const visibleBottom = containerScrollTop + containerHeight - 20  // Add buffer\n\n        // Scroll to center the active element\n        if (elementTop < visibleTop || elementBottom > visibleBottom) {\n          const scrollTarget = Math.max(0, elementTop - (containerHeight / 2) + (elementHeight / 2))\n          container.scrollTo({\n            top: scrollTarget,\n            behavior: 'smooth'\n          })\n        }\n      }\n    }, 300) // Increase delay to reduce interference\n\n    return () => clearTimeout(timeoutId)\n  }, [activeId])\n\n  const scrollToHeading = (e, id) => {\n    e.preventDefault()\n    const element = document.getElementById(id)\n    if (element) {\n      const top = element.offsetTop - 100\n      window.scrollTo({\n        top,\n        behavior: 'smooth'\n      })\n    }\n  }\n\n  if (headings.length === 0) {\n    return null\n  }\n\n  return (\n    <TOCWrapper>\n      <ProgressBar $progress={scrollProgress} />\n      <TOCContainer ref={tocRef}>\n        <TOCList>\n          {headings.map((heading) => (\n            <TOCItem\n              key={heading.id}\n              $depth={heading.depth}\n              $isActive={activeId === heading.id}\n            >\n              <TOCLink\n                href={`#${heading.id}`}\n                onClick={(e) => scrollToHeading(e, heading.id)}\n                $isActive={activeId === heading.id}\n                $isH2={heading.depth === 2}\n                $depth={heading.depth}\n              >\n                {heading.text}\n              </TOCLink>\n            </TOCItem>\n          ))}\n        </TOCList>\n      </TOCContainer>\n    </TOCWrapper>\n  )\n})\n\nexport default TableOfContents","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport styled from 'styled-components'\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport TableOfContents from \"../components/TableOfContents\"\nimport \"../styles/blog-post-v2.css\"\n\nconst PageWrapper = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst PostContainer = styled.div`\n  width: 100%;\n`;\n\nconst TOCWrapper = styled.aside``;\n\nconst PostHeader = styled.header`\n  margin-bottom: 3rem;\n  padding-bottom: 2rem;\n  border-bottom: 2px solid #E8F2FF;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 800;\n  line-height: 1.2;\n  margin: 0 0 1rem 0;\n  background: linear-gradient(135deg, #667eea 0%, #3182F6 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`;\n\nconst PostMeta = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  color: #64748b;\n  font-size: 0.95rem;\n`;\n\nconst PostDate = styled.time`\n  font-weight: 500;\n`;\n\nconst ReadingTime = styled.span`\n  &::before {\n    content: \"•\";\n    margin-right: 0.5rem;\n  }\n`;\n\nconst PostContent = styled.section`\n  font-size: 1.125rem;\n  line-height: 1.8;\n  color: #334155;\n\n  h1, h2, h3, h4, h5, h6 {\n    scroll-margin-top: 100px;\n    margin-top: 2rem;\n    margin-bottom: 1rem;\n    font-weight: 700;\n    line-height: 1.3;\n  }\n\n  h2 {\n    font-size: 1.75rem;\n    color: #1e293b;\n    padding-bottom: 0.5rem;\n    border-bottom: 1px solid #e2e8f0;\n  }\n\n  h3 {\n    font-size: 1.375rem;\n    color: #334155;\n  }\n\n  p {\n    margin: 1.5rem 0;\n  }\n\n  a {\n    color: #3182F6;\n    text-decoration: none;\n    border-bottom: 1px solid transparent;\n    transition: border-bottom 0.2s ease;\n\n    &:hover {\n      border-bottom: 1px solid #3182F6;\n    }\n  }\n\n  ul, ol {\n    margin: 1.5rem 0;\n    padding-left: 2rem;\n  }\n\n  li {\n    margin: 0.5rem 0;\n  }\n\n  code {\n    background: #f1f5f9;\n    padding: 0.2rem 0.4rem;\n    border-radius: 4px;\n    font-size: 0.9em;\n    color: #e11d48;\n  }\n\n  pre {\n    background: #1e293b;\n    color: #e2e8f0;\n    padding: 1.5rem;\n    border-radius: 8px;\n    overflow-x: auto;\n    margin: 2rem 0;\n\n    code {\n      background: none;\n      color: inherit;\n      padding: 0;\n    }\n  }\n\n  blockquote {\n    position: relative;\n    padding: 1.25rem 1.5rem;\n    margin: 2rem 0;\n    background: rgba(139, 92, 246, 0.08);\n    border-radius: 8px;\n    color: #475569;\n    font-style: italic;\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      bottom: 0;\n      width: 4px;\n      background: #8b5cf6;\n      border-radius: 8px 0 0 8px;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    height: auto;\n    border-radius: 8px;\n    margin: 2rem 0;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 2rem 0;\n\n    th, td {\n      padding: 0.75rem;\n      text-align: left;\n      border-bottom: 1px solid #e2e8f0;\n    }\n\n    th {\n      background: #f8fafc;\n      font-weight: 600;\n    }\n  }\n`;\n\nconst NavSection = styled.nav`\n  margin-top: -4rem;\n  padding-top: 2rem;\n  border-top: 2px solid #E8F2FF;\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  gap: 2rem;\n`;\n\nconst NavItem = styled.li`\n  flex: 1;\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  padding: 1.25rem;\n  background: #f8fafc;\n  border-radius: 12px;\n  text-decoration: none;\n  transition: all 0.3s ease;\n  border: 1px solid #e2e8f0;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n    border-color: #3182F6;\n    background: #ffffff;\n  }\n`;\n\nconst NavLabel = styled.span`\n  font-size: 0.875rem;\n  color: #64748b;\n  margin-bottom: 0.5rem;\n`;\n\nconst NavTitle = styled.span`\n  font-size: 1.125rem;\n  color: #1e293b;\n  font-weight: 600;\n`;\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const readingTime = Math.ceil(post.wordCount?.words / 200) || 5\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <PageWrapper>\n        <PostContainer>\n          <article\n            className=\"blog-post\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n          >\n            <PostHeader>\n              <PostTitle itemProp=\"headline\">{post.frontmatter.title}</PostTitle>\n              <PostMeta>\n                <PostDate>{post.frontmatter.date}</PostDate>\n                <ReadingTime>{readingTime} min read</ReadingTime>\n              </PostMeta>\n            </PostHeader>\n            <PostContent\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: post.html }}\n              itemProp=\"articleBody\"\n            />\n            <hr style={{ marginTop: '2rem', marginBottom: '0rem', border: '0', borderTop: '1px solid #E8F2FF' }} />\n            <footer>\n              <Bio />\n            </footer>\n          </article>\n          <NavSection className=\"blog-post-nav\">\n            <NavList>\n              {previous && (\n                <NavItem>\n                  <NavLink to={previous.fields.slug} rel=\"prev\">\n                    <NavLabel>← 이전 글</NavLabel>\n                    <NavTitle>{previous.frontmatter.title}</NavTitle>\n                  </NavLink>\n                </NavItem>\n              )}\n              {next && (\n                <NavItem>\n                  <NavLink to={next.fields.slug} rel=\"next\">\n                    <NavLabel>다음 글 →</NavLabel>\n                    <NavTitle>{next.frontmatter.title}</NavTitle>\n                  </NavLink>\n                </NavItem>\n              )}\n            </NavList>\n          </NavSection>\n        </PostContainer>\n      </PageWrapper>\n      <TOCWrapper>\n        <TableOfContents />\n      </TOCWrapper>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","style","fontSize","color","marginTop","github","href","target","rel","display","TOCWrapper","styled","div","withConfig","displayName","componentId","ProgressBar","props","$progress","TOCContainer","nav","TOCList","ul","TOCItem","li","$isActive","TOCLink","a","$depth","$isH2","globalScrollProgress","memo","headings","setHeadings","useState","activeId","setActiveId","scrollProgress","setScrollProgress","tocRef","useEffect","timer","setTimeout","contentElement","document","querySelector","headingElements","querySelectorAll","collected","forEach","heading","text","textContent","depth","parseInt","tagName","id","toLowerCase","replace","push","clearTimeout","animationFrame","handleScrollProgress","cancelAnimationFrame","requestAnimationFrame","scrollTop","window","pageYOffset","documentElement","scrollableHeight","scrollHeight","innerHeight","progress","Math","min","addEventListener","passive","removeEventListener","length","handleScroll","map","_ref","getElementById","filter","Boolean","currentActiveId","i","getBoundingClientRect","top","current","timeoutId","_tocRef$current","activeElement","container","elementTop","offsetTop","elementHeight","offsetHeight","containerHeight","clientHeight","containerScrollTop","scrollTarget","max","scrollTo","behavior","ref","key","onClick","e","scrollToHeading","preventDefault","element","PageWrapper","PostContainer","aside","PostHeader","header","PostTitle","h1","PostMeta","PostDate","time","ReadingTime","span","PostContent","section","NavSection","NavList","NavItem","NavLink","Link","NavLabel","NavTitle","Head","_ref2","markdownRemark","post","Seo","title","frontmatter","description","excerpt","_site$siteMetadata","_post$wordCount","previous","next","location","siteTitle","readingTime","ceil","wordCount","words","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","marginBottom","border","borderTop","to","fields","slug","TableOfContents"],"sourceRoot":""}